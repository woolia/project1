# .travis.yml 파일은 반드시 build.gradle 파일과 같은 위치에 있어야 travis 설정이 먹힌다.
language: java

jdk:
  - openjdk8

branches:
  only:
    - master
    -
# $ ./gradlew assemble 에러
# ./gradlew: Permission denied git에 permission을 업데이트 해줘야 travis가 실행할 수 있다.
# 그래서 다음과 같은 설정을 추가
before_install:
  - chmod +x gradlew

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

before_deploy:
  - zip -r project1 *
  - mkdir -p deploy
  - mv project1.zip deploy/project1.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: springboot-project-pr # s3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
      access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
      secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
      bucket: springboot-project-pr # S3 버킷
      key: project1.zip # 빌드 파일을 압축해서 전달
      bundle_type: zip
      application: freelec-springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
      deployment_group: freelec-springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
      region: ap-northeast-2
      wait-until-deployed: true

notifications:
  email:
    recipients:
      - zecrar@naver.com